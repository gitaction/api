plugins {
	id 'org.springframework.boot' version '2.2.7.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.gitaction'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.flywaydb:flyway-core'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.2'
	implementation 'io.springfox:springfox-swagger2:2.8.0'
	implementation 'io.springfox:springfox-swagger-ui:2.8.0'
	
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'com.tngtech.archunit:archunit-junit5-api:0.12.0'
	testCompileOnly 'org.projectlombok:lombok'
	testRuntimeOnly 'com.tngtech.archunit:archunit-junit5-engine:0.12.0'
	testCompile('com.h2database:h2:1.4.199')
}

test {
	useJUnitPlatform()
}


sourceSets {
	main {
		java {
			srcDir 'src/main/java'
		}
	}
	test {
		java {
			srcDir 'src/test/java'
		}
	}
}

apply from: "${projectDir}/gradle/checkstyle.gradle"
apply from: "${projectDir}/gradle/git-hooks.gradle"
apply from: "${projectDir}/gradle/pmd.gradle"
apply from: "${projectDir}/gradle/jacoco.gradle"